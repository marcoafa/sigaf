EN REGISTRO DE CARGA
//alert(uas); FUNCION GENERAR CARGA
				$("#semestre1 tbody:not(:eq(2)),#semestre2 tbody:not(:eq(2)),#semestre3 tbody:not(:eq(2)),#semestre4 tbody:not(:eq(2)),#semestre5 tbody:not(:eq(2)),#semestre6 tbody:not(:eq(2)),#semestre7 tbody:not(:eq(2)),#semestre8 tbody:not(:eq(2)),#semestre9 tbody:not(:eq(2))").html("");
				for (var i = 0; i < uas.length; i++) 
				{
					var renglon = "";
					// Poner en la seccion correspondiente de la tabla si es obligatoria:1 o seriada:2.
					if (uas[i].caracter == 1)
					{
						renglon = "<tr><td>"+uas[i].uaprendizaje+"</td><td>"+uas[i].descripcionmat+"</td><td>"+uas[i].creditos+"</td><td>"+uas[i].HC+"</td><td>"+uas[i].etapa+"</td><td>"+uas[i].claveD+"</td><td><input type='button' value='-'' title='Eliminar' class='clsEliminarFila' id='eliminar'/></td></tr>";
						$("#semestre"+uas[i].semestre+" tbody:eq(0)").append(renglon);
					}
					else
					{
						var ua = uas[i].uaprendizaje;
						var semestreua = uas[i].semestre;
						var renglonGrupos = "";
						// Obtener los grupos a los que pertenece la ua de tipo optativa
						$.ajax({
							type: "POST",
							url:"<?php echo URL::to('cargaacademica/obtenergruposua'); ?>",
							data: {uaprendizaje:ua,semestre:semestreua},
							dataType: "json",
							success: function(grupos){
								renglonGrupos = "";
								for(var j=0;j<grupos.length;j++)
								{
									if(j == grupos.length-1)
										renglonGrupos+=grupos[j].grupo;
									else
										renglonGrupos+=grupos[j].grupo + ", ";
								}
							},
							async:false
						});
						renglon="<tr><td>"+uas[i].uaprendizaje+"</td><td>"+uas[i].descripcionmat+" "+renglonGrupos+"</td><td>"+uas[i].creditos+"</td><td>"+uas[i].HC+"</td><td>"+uas[i].etapa+"</td><td>"+uas[i].claveD+"</td><td><input type='button' value='-'' title='Eliminar' class='clsEliminarFila' id='eliminar'/></td></tr>";
						$("#semestre"+uas[i].semestre+" tbody:eq(1)").append(renglon);
						//alert("Si fue sincrono");
					}
				}

				function agregarGruposSemestre(semestre,selectGrupos,callback)
				{
					// Cargar grupos en la tabla correspondiente
					var gruposCompletos = [];
					$(selectGrupos).find("option").each(function(index,element){
						gruposCompletos.push($(element).text());
					});

					$.post("<?php echo URL::to('cargaacademica/obtenerturnos'); ?>",{grupos:gruposCompletos},function(data){
						callback(data);
						
					})
					.fail(function(errorText,textError,errorThrow){
						alert(errorText.responseText);
					});
				}
				
				agregarGruposSemestre(semestre,selectGrupos,function(data){
					$("#semestre" + semestre + " tbody:eq(2)").html("<tr><td colspan='2'>"+data+"</td></tr>");
				});


EN REGISTRO DE PLAN DE ESTUDIO

	// INICIALIZAR MULTISELECTS DE PROGRAMAS EDUCATIVOS (CARRERAS)
		$('.example41').multiselect({
			includeSelectAllOption: true,
			onChange: function(element, checked,index){
				var brands = $('.example41 option:selected');
				var selected = [];
				$(brands).each(function(index, brand){
					selected.push([$(this).val()]);
				});
				// Asignar arreglos para guardar los números de las carreras
				$("#carreras").val(selected);

				// En caso de actualizar guardar solo las nuevas
				if($("#guardar").val()=="Actualizar")
				{
					if($(element).val()!=undefined) // Si no seleccionan todas las carreras
					{
						if(checked==true)
						{
							updated.push($(element).val());
						}
						else
						{
							var pos = updated.indexOf($(element).val());
							pos > -1 && updated.splice(pos,1);
						}
						//alert(updated);
					}
					else
					{
						if(checked==true)
						{
							updated = [];
							$('#select_carreras + div > button + .multiselect-container li input:enabled').each(function(index,element){
								if(index!=0)
									updated.push($(element).val());
							});
						}
						else
						{
							updated=[];
						}
						//alert(updated);
					}
				}
				$("#add_carreras").val(updated);
			}
		});

		<input type="button" style="width:120px"class="estilo_button2" type="button" value="Ver" name="ver" id="ver" />
		$("#ver").on("click",function(){
			alert("Mi zorrita esta cachorra y la adoro a la tontassss");
			alert($("#select_carreras").val());
		});


// PARA EL CASO DE LAS SERIACIONES CUANDO EXISTIA EL SIN SERIACION
/* Habilitar inputs cuando elijan seriacion
		$(".tblCatPlanAgregarSeriacion").on("change",".tipo-seriacion",function(){
			var opcionSerie = $(this).val();
			if(opcionSerie==1)
			{
				var filaSeriacion = $(this).parents().get(1);
				$(filaSeriacion).find(".clave-seriacion").attr('disabled',true).val("");
				$(filaSeriacion).find(".clave-seriacion-descripcion").val("");
			}
			else
			{
				var filaSeriacion = $(this).parents().get(1);
				$(filaSeriacion).find(".clave-seriacion").removeAttr('disabled').val("");
			}
		});*/

CUANDO ERA UNA MATERIA INDIVIDUAL SERIADA
	/* VERIFICAR QUE SELECCIONEN UNA CLAVE DE SERIACION CUANDO (OBLIGATORIA, SUGERIDA)
		$("#clave2F").on("focusout",function(){
			if($("#serie").val()!=1){
				if($(this).val().length<1)
					$(this).css("background-color","pink");
				else
					$(this).css("background-color","");
			}
				
		});*/

CONSULTA PEEEEEEEEEEEEEEEE
///////////////////////////// EN LA VENTANA MODAL DE ACTUALIZACION //////////////////////////////////////
// Si se quita el foco de la clave seriada mostrar nombre
		$("#claveSeriacion_update").on("focusout",function(){
			if($(this).val()!="")
			{
				var idua = $(this).val();
				$.post("<?php echo URL::to('planestudio/obtenermateria'); ?>",{uaprendizaje:idua},function(materia){
					$("#descripcionSeriacion_update").val(materia);
				});
			}
		});

		// Si se selecciono tipo de seriacion que no sea SIN SERIACION
		$("#seriacion_update").on("change",function(){
			if($(this).val()!=1)
				$("#claveSeriacion_update").attr("disabled",false);
			else
			{
				$("#claveSeriacion_update").val("");
				$("#claveSeriacion_update").attr("disabled",true);
			}
		});

NUEVAS MODIFICACIONES A PE

//***** Agregar registro al Datatable para consulta, modificacion, etc.
				/* Guardar las materias seriadas
				var uasSeriadas = [];
				if($(".tblCatPlanAgregarSeriacion > tbody > tr").length > 2)
				{
					$(".tblCatPlanAgregarSeriacion > tbody > tr").each(function(index,element){
						if(index >= 2) // Si no es sin seriacion, ni la fila base.
						{
							uasSeriadas.push($(element).find("input").first().val()); // Agregar al arreglo la serie de la carrera.
						}
					});
					uasSeriadas = uasSeriadas.join(",") // Unir por coma para mostrar en el renglon.
				}
				else
				{
					uasSeriadas = "SIN SERIACIÓN";
				} 
				// Agregar fila por cada carrera seleccionada
				$('#select_carreras + div > button + .multiselect-container li').each(function(indice,elemento){
					if($(elemento).hasClass('active') && indice != 0)
					{
						var input = $(elemento).find('input').val(); // Obtener el value de la carrera su id.
						t.row.add([
									clave1F,
									materia.toUpperCase(),
									$(elemento).text(), // El nombre de la carrera
									etapaF,
									tipoF,
									uasSeriadas,
									coord,
									hc,
									hl,
									ht,
									creditosF,
									"<input type='button' value='' title='"+clave1F+"' data="+input+" class='clsEliminarFila'>",
									"<input type='button' value='-' title='"+clave1F+"' data="+input+" class='clsEliminarFila'>"]).draw();
					}
				});
				alert(data);
				$("#materia").css({"background-color":"white","color":"black","font-size":"100%"});
				reset_campos();
				//desmarcar_carreras();alert(data);
				*/
PHP

// Insertar en 'p_ua' las carreras que contendran esa Unidad de Aprendizaje
			// $programas = explode(",",Input::get('carreras')); Cuando lo hacia de la manera compleja
			// $programas = Input::get('carreras');
			// $etapa = Input::get('etapaF');
			/*foreach ($programas as $carrera) {
				DB::table('p_ua') -> insert(array('programaedu' => $carrera,'uaprendizaje' => $clave,'etapa' => $etapa,'users_id' => $users_id));
			}

			// Capturar claves seriadas[11236,11237] y tipos [OBLIGATORIAS,OPTATIVAS]
			$tipos = Input::get("seriacion_tipo");
			$claves = Input::get("seriacion_clave");
			// Registrar las materias seriadas en detalleseriacion si existen registros
			if(isset($claves))
			{
				foreach ($claves as $key => $value) {
					DB::table('detalleseriacion') -> insert(array('uaprendizaje'=>$clave,'reqseriacion'=>$tipos[$key],'uaprequisito'=>$claves[$key],'users_id'=>$users_id));
				}
			}*/

